
/* ==========================================================================
   #MOSAIC
   ========================================================================== */

/**
 * `.mosaic` is used to display a grid of media items. Be in blog posts, job
 * listings, resorts or packages.
 *
 * 1. `flex` is applied so we can keep all the items the same height and keep
 *    the grid nice and tidy.
 * 2. As we use padding on the `.mosaic__item`s to give it a gutter, we need a
 *    negative `margin-left` to realign the block.
 */

.mosaic {
	@include clearfix;
	display: flex; /* [1] */
	flex-wrap: wrap; /* [1] */
	margin: 0 0 0 (-$gutter / 2); /* [2] */
}

/**
 * Each item within the grid should be wrapped in a `.mosaic__item` class.
 *
 * 1. On mobile devices all `.mosaic__item`s are stacked.
 * 2. On tablet devices they are presented in tandem.
 * 3. And on wider viewports the grid can be displayed with 3 items per row if
 *    an modifier class of `.mosaic--3x3` is added.
 * 4. Add a 15px gutter between each item.
 */

.mosaic__item {
	box-sizing: border-box; /* [4] */
	padding-left: $gutter / 2; /* [4] */
	width: 100%; /* [1] */
	
	@include bp(bp3) {
		float: left;
		width: 50%; /* [2] */
		
		&:nth-child(odd) {
			clear: left;
		}
	}
	
	.mosaic--3x3 & {
		
		@include bp(bp5) {
			width: 33.33333%; /* [3] */
			
			&:nth-child(odd) {
				clear: none;
			}
			
			&:nth-child(3n+1) {
				clear: left;
			}
		}
	}
}


/**
 * Every `mosaic__item` generally has a child wrapper div of `.tile` to hold all
 * of their content. The reason this uses a separate class and is not a (BEM)
 * element of of `.mosaic` is because these content blocks can be taken and
 * displayed within a Slick Slider carousel instead.
 *
 * 1. We use `flex` and `height: 100%;` to ensure each tile takes up the maximum
 *    available vertical space.
 * 2. When within a Slick Slider carousel we add a `box-shadow` as the items
 *    (intentionally) overlap.
 * 3. The reason the items overlap is we want the center item in the carousel to
 *    always be larger than the reset. `z-index` added to it's always on top.
 * 4. We need to add some vertical margins so the `box-shadow` and the scaled
 *    `.tile`s aren't cutoff.
 * 5. Fixes visual glitch on `:hover` caused by `transform` and `transition`s.
 */

.tile {
	background: $white;
	display: flex; /* [1] */
	flex-direction: column; /* [1] */
	height: 100%; /* [1] */
	position: relative;
	text-align: center;
	transition: all .15s;-webkit-backface-visibility: hidden;
	
	.slick-slide & {
		box-shadow: 0 0 15px rgba($black,.30); /* [2] */
		margin: ($vertical-spacing / 2) 0; /* [4] */
	}
	
	.slick-center & {
		transform: scale(1.05); /* [3] */
		z-index: 10; /* [3] */
	}
	
	p {
		line-height: 1.4;
	}
	
	.btn {
		-webkit-backface-visibility: hidden; /* [5] */
	}
}

/**
 * Any item that is placed within a `.tile` element.
 *
 * 1. Remove default `a` styling incase this element is a link.
 * 2. Scale image when `.tile` is hovered over.
 */

.tile__image {
	background-image: none; /* [1] */
	display: block;
	margin: 0;
	overflow: hidden;
	padding: 0; /* [1] */
	text-shadow: none; /* [1] */
	
	img {
		margin: 0;
		transition: all .15s;
		
		.tile:hover & {
			transform: scale(1.10); /* [2] */
		}
	}
}

/**
 * The container that wraps all the text-level content.
 *
 * 1. Further `flex` rules set to ensure this divs stretches to the full height
 *    of it's parent container.
 */

.tile__wrap {
	display: flex; /* [1] */
	flex-direction: column; /* [1] */
	flex: 1; /* [1] */
	align-items: center; /* [1] */
	padding: $vertical-spacing $gutter 0;
}

/**
 * The `.tile__footer` should contain an element you want to align to the foot
 * of the wrapper. Normally this is a text link (`.arrow-link`) or `.btn`.
 *
 * 1. Ensures this div aligns to the bottom of the container.
 * 2. As the margin is set on the parent, remove any margins from `.btn`s.
 */

.tile__footer {
	margin-bottom: $vertical-spacing;
	margin-top: auto; /* [1] */
	
	.btn {
		margin: 0; /* [2] */
	}
}

/**
 * If needed, a subtitle can be used within a `.tile`.
 *
 * 1. Can also include a published date.
 */

.tile__subtitle {
	color: $color-primary;
	@include font-size(14);
	margin-bottom: $vertical-spacing / 6;
	
	.dt-published {
		color: $grey-light; /* [1] */
	}
	
	@include bp(bp5) {
		@include font-size(16);
	}
}

/**
 * The main heading of a `.tile`.
 *
 * 1. Increase `font-size` if a modifer class of` tile__title--oversize` is
 *    added.
 */

.tile__title {
	@include font-size(24);
	
	@include bp(bp5) {
		@include font-size(30);
	}
	
	a {
		background-image: none;
		font-weight: 900;
		padding: 0;
		text-shadow: none;
	}
	
	&.tile__title--oversize {
		@include font-size(32);
		
		@include bp(bp5) {
			@include font-size(40);
		}
	}
}
