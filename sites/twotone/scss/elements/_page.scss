/* ==========================================================================
   #GRID
   ========================================================================== */

.grid {
	padding: $vertical-spacing $vertical-spacing 0;
}

.grid__item {
	display: grid;
	grid-column-gap: $vertical-spacing;
	margin-bottom: $vertical-spacing;
	width: 100%;

	@include bp(bp5) {
		align-items: center;
		grid-template-columns: repeat(12, 1fr);
		margin-top: 0;
	}
	
	+ .grid__item {
		margin-top: $vertical-spacing*2;
		
		@include bp(bp5) {
			margin-top: 0;
		}
	}
}

.grid__item--image {
	margin-bottom: $vertical-spacing;
	
	@include bp(bp5) {
		grid-column: 1/7;
		margin-bottom: 0;
		
		img {
			background-position: fixed;
			height: calc(100vh - #{$vertical-spacing*2});
			object-fit: cover;
			object-position: center;
		}
	}
}

.grid__item--caption {
	
	.btn {
		margin-bottom: 0;
	}
	
	@include bp(bp5) {
		grid-column: 7/13;
	}
}

/* Title */

.grid__item--caption-title {
	@include font-size(60);

	@include bp(bp5) {
		@include font-size(72);
		left: -25%;
		position: relative;
		
		&:before {
			clip-path: inset(0% calc(75% + #{$vertical-spacing}) 0% 0%);
			color: $white;
			content: attr(data-title);
			display: flex;
			overflow: hidden;
			position: absolute;
			text-align: left;
			width: 100%;
		}
	}
	
	@include bp(bp6) {
		@include font-size(84);
	}
}


.grid__item--flipped {

	@include bp(bp5) {
		direction: rtl;
		
		.grid__item--image,
		.grid__item--caption {
			direction: ltr;
		}
		
		.grid__item--caption-title {
			left: auto;
			right: -25%;
			text-align: right;
			
			&:before {
				clip-path: inset(0% 0% 0% calc(75% + #{$vertical-spacing}));
				justify-content: flex-end;
				text-align: right;
			}
		}
	}
}


/* ==========================================================================
#STOTTY - BLOCK OVER IMAGE, P/BTN THEN INDENTED
========================================================================== */

@include bp(bp5) {

	.stotty {
		
		.grid__item {
			//grid-column-gap: 0;
			grid-column-gap: $vertical-spacing;
		}
		
		.grid__item--image {
			grid-column: 1 / span 6;
			grid-row: 1;
		}
		
		.grid__item--caption {
			grid-column: 6 / span 6;
			grid-row: 1;
		}
		
		.grid__item--caption-title {
			left: 0 !important;
			
			&:before {
				//clip-path: inset(0% calc((5 / 6) * 100%) 0% 0%);
				clip-path: inset(0% calc(((5 / 6) * 100%) + ((5 / 6) * #{$vertical-spacing})) 0% 0%);
			}
		}
		
		p,
		.btn {
			margin-left: calc(((1 / 6) * 100%) + ((1 / 6) * #{$vertical-spacing}));
			width: 100%;
		}
		
		.grid__item--flipped {
				
			.grid__item--caption-title {
					
				&:before {
					//clip-path: inset(0% 0% 0% calc((5 / 6) * 100%));
					clip-path: inset(0% 0% 0% calc(((5 / 6) * 100%) + ((5 / 6) * #{$vertical-spacing})));
				}
			}
			
			p,
			.btn {
				margin-left: calc(((-1 / 6) * 100%) + ((-1 / 6) * #{$vertical-spacing}));
			}
		}
	}
}


/* ==========================================================================
#MOY - BLOCK IN GRID, TITLE INDENTED
========================================================================== */

@include bp(bp5) {

	.moy {
		
		.grid__item {
			grid-column-gap: $vertical-spacing;
		}
		
		.grid__item--image {
			grid-column: 1 / span 6;
			grid-row: 1;
		}
		
		.grid__item--caption {
			grid-column: 7 / span 6;
			grid-row: 1;
		}
		
		
		// Commented out are values if you want to use margin instead of left. Which
		// will allow text to span 100% of the column still.
		.grid__item--caption-title { 
			left: calc(((-1 / 6) * 100%) + ((-1 / 6) * #{$vertical-spacing}));
			//left: 0 !important;
			//margin-left: calc(((-1 / 6) * 100%) + ((-1 / 6) * #{$vertical-spacing}));
			
			&:before {
				clip-path: inset(0% calc(((5 / 6) * 100%) + ((5 / 6) * #{$vertical-spacing})) 0% 0%);
				//clip-path: inset(0% calc(((6 / 7) * 100%) + ((5 / 6) * #{$vertical-spacing})) 0% 0%);
			}
		}
		
		.grid__item--flipped {
				
			.grid__item--caption-title {
				left: calc(((1 / 6) * 100%) + ((1 / 6) * #{$vertical-spacing}));
				//left: 0 !important;
				//margin-right: calc(((-1 / 6) * 100%) + ((-1 / 6) * #{$vertical-spacing}));
					
				&:before {
					clip-path: inset(0% 0% 0% calc(((5 / 6) * 100%) + ((5 / 6) * #{$vertical-spacing})));
					//clip-path: inset(0% 0% 0% calc(((6 / 7) * 100%) + ((5 / 6) * #{$vertical-spacing})));
				}
			}
		}
	}
}