
/* ==========================================================================
   #FEATURES
   ========================================================================== */

/**
 * Features/service panel. Each item has an icon, title and short text entry.
 *
 * 1. The number of items can change from 5 - 6, so I've set flex-direction to
 *    'row' on desktop (when the items are in a row) so the items will always be
 *    spaced evenly.
 * 2. Need to overwrite `align-items` so the icons are vertically aligned to the
 *    top of the container.
 */

.features {
	@include clearfix;
	display: flex;
	flex-direction: column;
	align-items: center;
	margin: 0;
	padding: 0;
	
	@include bp(bp4) {
		display: block;
		margin-left: -$gutter;
	}
	
	@include bp(bp5) {
		display: flex; /* [1] */
		flex-direction: row; /* [1] */
		align-items: flex-start; /* [2] */
	}
}

/**
 * The wrapper for each featured item that contains an icon, title and short
 * sentence.
 *
 * 1. I've removed the width, which was always 20% as there were always 5 items
 *    but now that can change and we've added `flex-direction: row;` to the
 *    parent div we shouldn't need it.
 * 2. Add `flex` so we can align text depending on content. Although the item
 *    can include a title + text, sometimes it will just be a title. So we want
 *    to vertically center the text until there's no space left, then it aligns
 *    to the top.
 * 3. Overwrite `flex` on wider viewports.
 * 4. Make items have equal widths. If not applied they'll be uneven.
 */

.features__item {
	background: none;
	box-sizing: border-box;
	@include clearfix;
	display: flex; /* [2] */
	align-items: flex-start; /* [2] */
	margin: 0 0 $vertical-spacing;
	padding: 0;
	width: 100%;
	max-width: 400px;
	
	@include bp(bp4) {
		float: left;
		padding: 0 0 0 $gutter;
		width: 50%;
		max-width: none;
		
		&:nth-child(odd) {
			clear: left;
		}
	}
	
	@include bp(bp5) {
		display: block;/* [3] */
		flex-grow: 1; /* [4] */
		flex-basis: 0; /* [4] */
		text-align: center;
		padding: 0 $gutter / 2;
		width: auto; /* [1] */
		
		&:nth-child(odd) {
			clear: none;
		}
	}
}

/**
 * The wrapper for the feature icon.
 *
 * 1. Prevent the icon from shrinking now `flex` is set on it's parent.
 * 2. Adjust icon sizes on wider viewports.
 */

.features__icon-wrap {
	background-color: $color-primary-light;
	background-image: url(../img/interface/noise.png), linear-gradient(rgba($color-primary,0) 0%, $color-primary 100%);
	border-radius: 100%;
	display: inline-block;
	flex-shrink: 0; /* [1] */
	height: 50px;
	line-height: 50px;
	margin: 0 ($gutter / 2) ($vertical-spacing / 4) 0;
	float: left;
	text-align: center;
	width: 50px;
	
	.icon {
		fill: $white;
		height: 25px;
		width: 25px;
	}
	
	@include bp(bp5) {
		float: none;
		margin: 0 0 $vertical-spacing 0;
		height: 100px;
		line-height: 100px;
		width: 100px;
		
		.icon { /* [2] */
			height: 50px;
			width: 50px;
		}
	}
}

/**
 * The wrapper for title + text.
 *
 * 1. This aligns the text horizontally centered to the icon. If it is greater
 *    in height to the icon alongside it, the text will then align to the top of
 *    the parent item.
 */

.features__text-wrap {
	align-self: center;
}

/**
 * Childern of the `.features__text-wrap` div. Heading and paragraph.
 */

.features__title {
	@include font-size(14);
	margin-bottom: $vertical-spacing / 4;
	
	@include bp(bp5) {
		@include font-size(16);
	}
}

.features__text {
	@include font-size(13);
	line-height: 1.4;
	margin-bottom: 0;
}
