
/*------------------------------------*\
    #HR
\*------------------------------------*/

/**
 * Base `hr` styling.
 */

hr {
	border: 0;
	border-top: 2px solid $border-color;
	border-bottom: 1px solid rgba($white,.10);
	display: block;
	height: 1px;
	margin: $baseline 0 $baseline*2;
	padding: 0;
	
	.boxout & {
		border-color: $grey-lite;
		border-bottom: none;
	}
}




/*------------------------------------*\
    #IMAGES
\*------------------------------------*/

/**
 * Base `img` styling.
 */

img {
	border-width: 0;
	vertical-align: middle;
	max-width: 100%;
	-ms-interpolation-mode: bicubic;
}


/**
 * `figure` and `figcatpion`.
 */


figure {
	margin-bottom: $baseline/2;
	
	img {
		margin: 0 auto $baseline/2;
	}
}

figcaption {
	display: block;
	@include font-size(16);
	line-height: $font-lineheight/1.25;
	font-weight: normal;
}


/**
 * An alternative `figure` style where the photo and figcaption are displayed
 * in a white frame.
 */
 
.framed {
	background: $white;
	box-shadow: inset -2px -2px 0 $grey-lite, 4px 4px rgba($black,.05);
	box-sizing: border-box;
	display: block;
	padding: $baseline/2;
	text-align: center;
	
	img {
		margin-bottom: 0;
		width: 100%;
		max-width: 100%;
	}
	
	figcaption {
		color: $grey-l;
		@include font-size(14);
		font-family: $alt-font-family;
		letter-spacing: 1px;
		padding: 15px 0 5px;
	}
}





/*------------------------------------*\
    #SCATTERED PHOTOS
\*------------------------------------*/

/**
 * A way to display multiple photos in a grid/row layout. Images should all be
 * the same size/aspect ratio to help with wrapping.
 *
 * 1. Additional vertical spacing.
 * 2. Fix issue with transition.
 */

.photos {
	margin-bottom: $baseline; /* [1] */
	padding-top: $baseline; /* [1] */
	vertical-align: top;
	
	img {
		-webkit-backface-visibility: hidden; /* [2] */
	}
}

/**
 * Each individual item (figure) is displayed 2x2 by default. On wider displays
 * they can be displayed 3x3 or 4x4. The rules for this are extended below in
 * set media queries.
 *
 * 1. Each item needs a direct child of a div/anchor with a class of `.framed`.
 *    This child element can also contain a `figcaption` element but it's not
 *    required. Default styling for `.framed` are declared elsewhere in
 *     _elements.scss, under the #IMAGES section.
 * 2. If `.framed` is :not a div (then it should only be an anchor) add rotation
 *    on :hover. This is because I don't want the images to look clickable if
 *    they're not anchors as some will launch a fancybox containg additional.
 *    content.
 */

.photos__item {
	box-sizing: border-box;
	display: inline-block;
	margin-bottom: 2%;
	padding: 2.5% 4%;
	width: 48%;
	
	.framed { /* [1] */
		text-shadow: none;
		transform: rotate(-8deg);
		transition: transform .10s ease-in;
		vertical-align: middle;
		-webkit-backface-visibility: hidden;
		
		&:hover:not(div) { /* [2] */
			transform: rotate(-4deg);
		}
	}
}

/**
 * Change the starting angle and hover rotation for every the 2nd, 3rd and 4th
 * `.photo__item`.
 *
 * 1. Every 2nd item.
 * 2. Every 3rd item.
 * 3. Every 4th item.
 */

.photos__item:nth-child(4n+2) { /* [1] */
	
	.framed {
		transform: rotate(6deg);
		
		&:hover:not(div) {
			transform: rotate(2deg);
		}
	}
}

.photos__item:nth-child(4n+3) { /* [2] */
	
	.framed {
		transform: rotate(2deg);
		
		&:hover:not(div) {
			transform: rotate(-2deg);
		}
	}
}

.photos__item:nth-child(4n+4) { /* [3] */
	
	.framed {
		transform: rotate(-7deg);
			
			&:hover:not(div) {
				transform: rotate(-3deg);
		}	
	}
}

/**
 * Media queries to adjust layout/image size on wider displays. These rules
 * extend `.photos {}`.
 *
 * 1. Above 1200px if an additional class of `.photos--medium` is added to the
 *    parent wrapped images can be displayed smaller and in a 3x3 layout.
 * 2. Above 1200px if an additional class of `.photos--small` is added to the
 *    parent wrapped images can be displayed smaller and in a 4x4 layout.
 */

@media (min-width: 1200px) {
	
	.photos--medium { /* [1] */
		
		.photos__item {
			padding: $baseline 2%;
			width: 32%;
		}
	}
	
	.photos--small { /* [2] */
		
		.photos__item {
			padding: $baseline 2%;
			width: 24%;
		}
	}
}
