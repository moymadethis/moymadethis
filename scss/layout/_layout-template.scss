/* ==========================================================================
   #PAGE LOAD (pace.js)
   ========================================================================== */
   
/**
 * The `.page` div acts as a container for all the content on a page. Including
 * the header and footer.
 *
 * 1. We use flexbox to make `.page-foot` a sticky footer to keep it fixed to
 *    bottom of the page when there's not enough content to push it down.
 * 2. Using flexbox we set the height to 100% and also `box-sizing: border-box;`
 *    to compensate for the vertical padding.
 * 3. When pace.js is running we add `opacity` to the `body` element so we can
 *    fade the page in with a transition once it's loaded.
 * 4. Just incase Javascript doesn't load, we force `opacity: 1;` so content is
 *    still visible.
 * 5. As some elements run off the page the `overflow` values are adjusted so no
 *    nasty horizontal scroll bars appear.
 */

.page {
	box-sizing: border-box;/* [3] */
	display: flex; /* [2] */
	flex-direction: column; /* [2] */
	min-height: 100vh; /* [3] */
	//opacity: 0;
	overflow: hidden; /* [5] */
	overflow-y: auto; /* [5] */
	
	.pace-done & {
		//opacity: 1; /* [4] */
		transition: opacity .5s ease;
	}
	
	.no-js & {
		//opacity: 1 !important; /* [5] */
	}
}





/* ==========================================================================
   #PAGE LOAD (pace.js)
   ========================================================================== */
   
/**
 * Pace.js is a plug-in that adds a progress indicator to your pages. We use a
 * basic bar that spans across the top of the browser, indicting the page load
 * progress, which disppears once it's done.
 */

.pace {
	pointer-events: none;
	user-select: none;
}

.pace-progress {
	background: $color-primary;
	height: 8px;
	position: fixed;
	top: 0;
	right: 100%;
	width: 100%;
	z-index: 2000;	
}

/**
 * What happens when the bar isn't needed anymore.
 */
 
.pace-inactive {
	//display: none;
	
	.pace-progress {
		opacity: 0;
		transition: all .10s;
	}
}






.nprogress-busy body {
  cursor: wait;
}

.page {
  opacity: 0;
  transition: .25s ease;
}

.nprogress-done .page {
	opacity: 1;
}


//all 300ms linear 700ms

.nprogress-busy {}

/* Make clicks pass-through */
#nprogress {
  pointer-events: none;
}

#nprogress .bar {
  background: #29d;

  position: fixed;
  z-index: 1031;
  top: 0;
  left: 0;

  width: 100%;
  height: 8px;
}

/* Fancy blur effect */
#nprogress .peg {
  display: block;
  position: absolute;
  right: 0px;
  width: 100px;
  height: 100%;
  box-shadow: 0 0 10px #29d, 0 0 5px #29d;
  opacity: 1.0;

  -webkit-transform: rotate(3deg) translate(0px, -4px);
      -ms-transform: rotate(3deg) translate(0px, -4px);
          transform: rotate(3deg) translate(0px, -4px);
}

.nprogress-custom-parent {
  overflow: hidden;
  position: relative;
}

.nprogress-custom-parent #nprogress .bar {
  position: absolute;
}






















$colorOutline: #ffffff;
$colorOutlineFade: #4e5559;

$widthMouse: 25px;
$heightMouse: 45px;
$borderMouse: 4px;

$posMouse: 10px;
$posText: 2px;

$sizeTrackball: 4px;
$posTrackball: 10px;
$shrinkTrackball: 0.5;

$animDuration: 5s;

@mixin bgGradient {
  background:
    $colorOutlineFade
    linear-gradient(
      transparent 0%,
      transparent 50%,
      $colorOutline 50%,
      $colorOutline 100%
    );
}


.mouse {
	@include bgGradient;
	position: relative;
	width: $widthMouse;
	height: $heightMouse;
	background-size: 100% 100%;
	border-radius: 100px;
	background-size: 225%;
	position: relative;
	z-index: 10;
	margin: 0 auto ($vertical-spacing * 2);
	animation: 
	colorSlide $animDuration linear infinite,
	nudgeMouse $animDuration ease-out infinite;
	
	&:before,
	&:after {
		content: "";
		position: absolute;
		top: 0; right: 0; bottom: 0; left: 0;
		margin: auto;
	}
	&:before {
		width: $widthMouse - $borderMouse;
		height: $heightMouse - $borderMouse;
		background-color: $grey-darker;
		border-radius: 100px;
	}
	&:after {
		background-color: $colorOutline;
		width: $sizeTrackball;
		height: $sizeTrackball;
		border-radius: 100%;
		animation: trackBallSlide $animDuration linear infinite;
	}
}

@keyframes colorSlide { 
  0% { background-position: 0% 100%; }
  20% { background-position: 0% 0%; }
  21% { background-color: $colorOutlineFade; }
  29.99% { 
    background-color: $colorOutline;
    background-position: 0% 0%;
  }
  30% { 
    background-color: $colorOutlineFade;
    background-position: 0% 100%;
  }
  50% { background-position: 0% 0%; }
  51% { background-color: $colorOutlineFade; }
  59.99% { 
    background-color: $colorOutline;
    background-position: 0% 0%;
  }
  60% { 
    background-color: $colorOutlineFade;
    background-position: 0% 100%;
  }
  80% { background-position: 0% 0%; }
  81% { background-color: $colorOutlineFade; }
  89.99%, 100% { background-color: $colorOutline; }
}

@keyframes trackBallSlide {
  0% {
    opacity: 1;
    transform: scale(1) translateY(-$posTrackball);
  }
  6% { 
    opacity: 1;
    transform: scale(0.9) translateY($posTrackball/4);
  }
  14% {
    opacity: 0;
    transform: scale($shrinkTrackball) translateY($posTrackball*2);
  }
  15%, 19% {
    opacity: 0;
    transform: scale($shrinkTrackball) translateY(-$posTrackball);
  }
  28%, 29.99% {
    opacity: 1;
    transform: scale(1) translateY(-$posTrackball);
  }
  30% {
    opacity: 1;
    transform: scale(1) translateY(-$posTrackball);
  }
  36% { 
    opacity: 1;
    transform: scale(0.9) translateY($posTrackball/4);
  }
  44% {
    opacity: 0;
    transform: scale($shrinkTrackball) translateY($posTrackball*2);
  }
  45%, 49% {
    opacity: 0;
    transform: scale($shrinkTrackball) translateY(-$posTrackball);
  }
  58%, 59.99% {
    opacity: 1;
    transform: scale(1) translateY(-$posTrackball);
  }
  60% {
    opacity: 1;
    transform: scale(1) translateY(-$posTrackball);
  }
  66% { 
    opacity: 1;
    transform: scale(0.9) translateY($posTrackball/4);
  }
  74% {
    opacity: 0;
    transform: scale($shrinkTrackball) translateY($posTrackball*2);
  }
  75%, 79% {
    opacity: 0;
    transform: scale($shrinkTrackball) translateY(-$posTrackball);
  }
  88%, 100% {
    opacity: 1;
    transform: scale(1) translateY(-$posTrackball);
  }
}

@keyframes nudgeMouse {
  0% { transform: translateY(0); }
  20% { transform: translateY($posMouse); }
  30% { transform: translateY(0); }
  50% { transform: translateY($posMouse); }
  60% { transform: translateY(0); }
  80% { transform: translateY($posMouse); }
  90% { transform: translateY(0); }
}
